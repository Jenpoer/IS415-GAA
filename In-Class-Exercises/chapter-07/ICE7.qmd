---
title: "In-Class Exercise 7: Global & Local Measures of Spatial Autocorrelation"
format: html
author: "Jennifer Poernomo"
date: "18 February 2023"
date-modified: "`r Sys.Date()`"
execute: 
  message: false
  warning: false
editor: visual
---

# Import Packages

```{r}
pacman::p_load(sf, sfdep, tmap, tidyverse)
```

# Import Dataset

## Geospatial

```{r}
hunan <- st_read(dsn = "../chapter-06/data/geospatial", 
                 layer = "Hunan")
```

## Aspatial

```{r}
hunan2012 <- read_csv("../chapter-06/data/aspatial/Hunan_2012.csv")
```

# Data Preprocessing

## Combining data frame with left join

```{r}
hunan_GDPPC <- left_join(hunan,hunan2012) %>%
  select(1:4, 7, 15)
```

```{r}
tm_shape(hunan_GDPPC)+
  tm_fill("GDPPC", 
          style = "quantile", 
          palette = "Blues",
          title = "GDPPC") +
  tm_layout(main.title = "Distribution of GDP per capita by district, Hunan Province",
            main.title.position = "center",
            main.title.size = 1,
            legend.outside = TRUE,
            legend.position = c("right", "bottom"),
            frame = TRUE) +
  tm_borders(alpha=0.5) +
  tm_compass(type="8star", size = 2) +
  tm_scale_bar() +
  tm_grid(alpha = 0.2)
```

# Identify Polygon Neighbors

```{r}
wm_q <- hunan_GDPPC %>%
  mutate(nb = st_contiguity(geometry),
         wt = st_weights(nb, style = "W"),
         .before = 1) # put newly-created field in first column
```

# Computing Global Moran's I

```{r}
moran1 <- global_moran(wm_q$GDPPC,
                       wm_q$nb,
                       wm_q$wt)
```

Perfom the Global Moran's I test (only doing this step is sufficient)

```{r}
global_moran_test(wm_q$GDPPC,
                  wm_q$nb,
                  wm_q$wt)
```

Perform Global Moran's I permutation test

```{r}
set.seed(1234)
```

```{r}
global_moran_perm(wm_q$GDPPC,
                  wm_q$nb,
                  wm_q$wt,
                  nsim=99)
```

# Computing Local Moran's I

```{r}
lisa <- wm_q %>% 
  mutate(`Local_Moran` = local_moran(GDPPC, nb, wt, nsim=99),
         .before = 1) %>%
  unnest(`Local_Moran`)

lisa
```

Plot local Moran's I

```{r}
tmap_mode("plot")
tm_shape(lisa) +
  tm_fill("ii") +
  tm_borders(alpha = 0.5)
```

Plot p-value of local Moran's I (but ideally, you should use the simulation values)

```{r}
tmap_mode("plot")
tm_shape(lisa) +
  tm_fill("p_ii_sim") +
  tm_borders(alpha = 0.5)
```

```{r}
lisa_sig <- lisa %>% filter(p_ii_sim < 0.05)

tmap_mode("plot")
tm_shape(lisa) +
  tm_polygons() +
  tm_borders(alpha = 0.5) +
  tm_shape(lisa_sig) + 
  tm_fill("mean") +
  tm_borders(alpha=0.5)
```

# Computing Local Gi\*

Include itself

```{r}
HCSA <- wm_q %>%
  mutate(local_Gi = local_gstar_perm(GDPPC, nb, wt, nsim=99),
         .before = 1) %>%
  unnest(local_Gi)

HCSA
```

```{r}
tmap_mode("view")
tm_shape(HCSA) +
  tm_fill("gi_star") +
  tm_borders(alpha = 0.5)+ 
  tm_view(set.zoom.limits = c(6, 8))
```

```{r}
tmap_mode("plot")
tm_shape(HCSA) +
  tm_fill("p_sim") +
  tm_borders(alpha = 0.5)
```

# Emerging Hot Spots

```{r}
GDPPC <- read_csv('data/aspatial/Hunan_GDPPC.csv')
```

Create Time Series Cube

```{r}
GDPPC_st <- spacetime(GDPPC, hunan, .loc_col = "County", .time_col = "Year")
```

```{r}
GDPPC_nb <- GDPPC_st %>%
  activate("geometry") %>%
  mutate(
    nb = include_self(st_contiguity(geometry)),
    wt = st_weights(nb)
  ) %>%
  set_nbs("nb") %>%
  set_wts("wt")
```

Computing Gi\*

```{r}
gi_stars <- GDPPC_nb %>%
  group_by(Year) %>%
  mutate(gi_star = local_gstar_perm(GDPPC, nb, wt, nsim=99),
         .before = 1) %>%
  unnest(gi_star)
```

Mann-Kendall Test

```{r}
cbg <- gi_stars %>%
  ungroup() %>%
  filter(County == "Changsha") %>%
  select(County, Year, gi_star)
```

```{r}
ehsa <- emerging_hotspot_analysis(
  GDPPC_st,
  .var = "GDPPC",
  k = 1,
  nsim = 99
)
```
