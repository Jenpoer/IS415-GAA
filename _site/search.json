[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "After uninstalling and re-installing R and RStudio 3 times, I finally got this website running.\nSometimes, when things go wrong, closing and reopening RStudio does the trick. If not, restart your computer.\nBleeding edge is not necessarily good. In fact, it can be an anti-pattern because the latest versions of technology might not be compatible. After a week of struggling with broken installation, I finally downgraded to R 4.2.1 and finally it’s fine."
  },
  {
    "objectID": "Hands-On-Exercises/chapter-02/HOE1.html",
    "href": "Hands-On-Exercises/chapter-02/HOE1.html",
    "title": "Hands-On Exercise 2: Geospatial Data Wrangling",
    "section": "",
    "text": "pacman::p_load(sf, tidyverse)"
  },
  {
    "objectID": "Hands-On-Exercises/chapter-02/HOE1.html#importing-the-datasets",
    "href": "Hands-On-Exercises/chapter-02/HOE1.html#importing-the-datasets",
    "title": "Hands-On Exercise 2: Geospatial Data Wrangling",
    "section": "Importing the Datasets",
    "text": "Importing the Datasets\nMaster Plan 2014 Subzone Boundaries (Web) from data.gov.sg . Web version is used because it’s optimized for web display, with a smaller file size.\n\nmpsz = st_read(dsn = \"data/geospatial/master-plan-2014-subzone-boundary-web-shp\", \n               layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Jenpoer\\IS415-GAA\\Hands-On-Exercises\\chapter-02\\data\\geospatial\\master-plan-2014-subzone-boundary-web-shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nCycling Path from LTADataMall\n\ncyclingpath = st_read(dsn = \"data/geospatial/CyclingPathGazette\", \n                      layer = \"CyclingPathGazette\")\n\nReading layer `CyclingPathGazette' from data source \n  `C:\\Jenpoer\\IS415-GAA\\Hands-On-Exercises\\chapter-02\\data\\geospatial\\CyclingPathGazette' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2248 features and 2 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42626.09 ymax: 48948.15\nProjected CRS: SVY21\n\n\nPre-Schools Location from Dataportal.asia (originally from data.gov.sg)\n\npreschool = st_read(\"data/geospatial/preschools-location.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `C:\\Jenpoer\\IS415-GAA\\Hands-On-Exercises\\chapter-02\\data\\geospatial\\preschools-location.kml' \n  using driver `KML'\nSimple feature collection with 1925 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "Hands-On-Exercises/chapter-02/HOE1.html#checking-the-contents-of-a-simple-feature-data-frame",
    "href": "Hands-On-Exercises/chapter-02/HOE1.html#checking-the-contents-of-a-simple-feature-data-frame",
    "title": "Hands-On Exercise 2: Geospatial Data Wrangling",
    "section": "Checking the contents of a simple feature data frame",
    "text": "Checking the contents of a simple feature data frame\nChecking the information about the geometry, such as type, geographic extent of features, and coordinate system of the data.\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\nFind out about the attribute information in the data frame.\n\nglimpse(mpsz)\n\nRows: 323\nColumns: 16\n$ OBJECTID   <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO <int> 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  <chr> \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  <chr> \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     <chr> \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N <chr> \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C <chr> \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   <chr> \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   <chr> \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    <chr> \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D <date> 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     <dbl> 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     <dbl> 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng <dbl> 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area <dbl> 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   <MULTIPOLYGON [m]> MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…\n\n\nReveal complete information of a feature object, but retrieve the first few rows only.\n\nhead(mpsz, n=5)\n\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30..."
  },
  {
    "objectID": "Hands-On-Exercises/chapter-02/HOE1.html#plotting-the-geospatial-data",
    "href": "Hands-On-Exercises/chapter-02/HOE1.html#plotting-the-geospatial-data",
    "title": "Hands-On Exercise 2: Geospatial Data Wrangling",
    "section": "Plotting the Geospatial Data",
    "text": "Plotting the Geospatial Data\nPlot all the features of the data frame in small multiples. max.plot is used to show all the features, since it limits to the first 9 by default.\n\nplot(mpsz, max.plot=15)\n\n\n\n\nPlot only the geometry\n\nplot(st_geometry(mpsz))\n\n\n\n\nPlot the sf object using a specific attribute\n\nplot(mpsz[\"PLN_AREA_N\"])"
  },
  {
    "objectID": "Hands-On-Exercises/chapter-02/HOE1.html#projection-transformation",
    "href": "Hands-On-Exercises/chapter-02/HOE1.html#projection-transformation",
    "title": "Hands-On Exercise 2: Geospatial Data Wrangling",
    "section": "Projection Transformation",
    "text": "Projection Transformation\nProject a feature to another coordinate system.\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\nEven though the projection system is SVY21, when we read the end of print, the EPSG is 9001. This is wrong because EPSG of SVY21 should be 3414.\nSVY21 is coordinate system for Singapore.\n\nmpsz3414 <- st_set_crs(mpsz, 3414)\n\nHowever, different case for Preschool. We cannot just replace the EPSG.\n\nst_geometry(preschool)\n\nGeometry set for 1925 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nFirst 5 geometries:\n\n\nIt uses WGS84, which we need to actually project mathematically to SVY21.\n\npreschool3414 <- st_transform(preschool, \n                              crs = 3414)"
  },
  {
    "objectID": "Hands-On-Exercises/chapter-02/HOE1.html#import-data",
    "href": "Hands-On-Exercises/chapter-02/HOE1.html#import-data",
    "title": "Hands-On Exercise 2: Geospatial Data Wrangling",
    "section": "Import data",
    "text": "Import data\n\nlistings <- read_csv('data/aspatial/listings.csv')\nlist(listings)\n\n[[1]]\n# A tibble: 4,161 × 18\n       id name     host_id host_…¹ neigh…² neigh…³ latit…⁴ longi…⁵ room_…⁶ price\n    <dbl> <chr>      <dbl> <chr>   <chr>   <chr>     <dbl>   <dbl> <chr>   <dbl>\n 1  50646 Pleasan…  227796 Sujatha Centra… Bukit …    1.33    104. Privat…    80\n 2  71609 Ensuite…  367042 Belinda East R… Tampin…    1.35    104. Privat…   145\n 3  71896 B&B  Ro…  367042 Belinda East R… Tampin…    1.35    104. Privat…    85\n 4  71903 Room 2-…  367042 Belinda East R… Tampin…    1.35    104. Privat…    85\n 5 275344 15 mins… 1439258 Kay     Centra… Bukit …    1.29    104. Privat…    49\n 6 289234 Booking…  367042 Belinda East R… Tampin…    1.34    104. Privat…   184\n 7 294281 5 mins … 1521514 Elizab… Centra… Newton     1.31    104. Privat…    79\n 8 324945 Cozy Bl… 1439258 Kay     Centra… Bukit …    1.29    104. Privat…    49\n 9 330089 Cozy Bl… 1439258 Kay     Centra… Bukit …    1.29    104. Privat…    55\n10 330095 10 mins… 1439258 Kay     Centra… Bukit …    1.29    104. Privat…    55\n# … with 4,151 more rows, 8 more variables: minimum_nights <dbl>,\n#   number_of_reviews <dbl>, last_review <date>, reviews_per_month <dbl>,\n#   calculated_host_listings_count <dbl>, availability_365 <dbl>,\n#   number_of_reviews_ltm <dbl>, license <chr>, and abbreviated variable names\n#   ¹​host_name, ²​neighbourhood_group, ³​neighbourhood, ⁴​latitude, ⁵​longitude,\n#   ⁶​room_type\n\n\nListings is a tibble\n\nis_tibble(listings)\n\n[1] TRUE\n\n\nCreate a simple feature data frame from aspatial data\n\nlistings_sf <- st_as_sf(listings, \n                        coords = c(\"longitude\", \"latitude\"), \n                        crs=4326) %>%\n  st_transform(crs = 3414)\n\n\n\n\n\n\n\n%>% is like a pipe, defined by package magrittr, used to pass the left hand side of the operator to the first argument of the right hand side of the operator\n\n\n\n\n\n\n\nglimpse(listings_sf)\n\nRows: 4,161\nColumns: 17\n$ id                             <dbl> 50646, 71609, 71896, 71903, 275344, 289…\n$ name                           <chr> \"Pleasant Room along Bukit Timah\", \"Ens…\n$ host_id                        <dbl> 227796, 367042, 367042, 367042, 1439258…\n$ host_name                      <chr> \"Sujatha\", \"Belinda\", \"Belinda\", \"Belin…\n$ neighbourhood_group            <chr> \"Central Region\", \"East Region\", \"East …\n$ neighbourhood                  <chr> \"Bukit Timah\", \"Tampines\", \"Tampines\", …\n$ room_type                      <chr> \"Private room\", \"Private room\", \"Privat…\n$ price                          <dbl> 80, 145, 85, 85, 49, 184, 79, 49, 55, 5…\n$ minimum_nights                 <dbl> 92, 92, 92, 92, 60, 92, 92, 60, 60, 60,…\n$ number_of_reviews              <dbl> 18, 20, 24, 47, 14, 12, 133, 17, 12, 3,…\n$ last_review                    <date> 2014-12-26, 2020-01-17, 2019-10-13, 20…\n$ reviews_per_month              <dbl> 0.18, 0.15, 0.18, 0.34, 0.11, 0.10, 1.0…\n$ calculated_host_listings_count <dbl> 1, 6, 6, 6, 44, 6, 7, 44, 44, 44, 6, 7,…\n$ availability_365               <dbl> 365, 340, 265, 365, 296, 285, 365, 181,…\n$ number_of_reviews_ltm          <dbl> 0, 0, 0, 0, 1, 0, 0, 3, 2, 0, 1, 0, 0, …\n$ license                        <chr> NA, NA, NA, NA, \"S0399\", NA, NA, \"S0399…\n$ geometry                       <POINT [m]> POINT (22646.02 35167.9), POINT (…"
  },
  {
    "objectID": "Hands-On-Exercises/chapter-02/HOE1.html#buffering",
    "href": "Hands-On-Exercises/chapter-02/HOE1.html#buffering",
    "title": "Hands-On Exercise 2: Geospatial Data Wrangling",
    "section": "Buffering",
    "text": "Buffering\nBuffering is reclassification based on distance: classification of within/without a given proximity.\n\nbuffer_cycling <- st_buffer(cyclingpath, \n                            dist=5, nQuadSegs = 30) # 5 meter buffers along cycling paths\n\nCalculate area of buffers\n\nbuffer_cycling$AREA <- st_area(buffer_cycling)\n\nShow sum of total land involved\n\nsum(buffer_cycling$AREA)\n\n1556978 [m^2]"
  },
  {
    "objectID": "Hands-On-Exercises/chapter-02/HOE1.html#point-in-polygon-count",
    "href": "Hands-On-Exercises/chapter-02/HOE1.html#point-in-polygon-count",
    "title": "Hands-On Exercise 2: Geospatial Data Wrangling",
    "section": "Point-in-polygon Count",
    "text": "Point-in-polygon Count\nGoal: Identify pre-schools located in each Planning Subzone using st_intersects.\nlength is used to calculate number of pre-schools that fall inside each zone.\n\nmpsz3414$`PreSch Count`<- lengths(st_intersects(mpsz3414, listings_sf))\n\n\nsummary(mpsz3414$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   2.000   9.709   8.000 253.000 \n\n\nList the subzone with the most number of preschools\n\ntop_n(mpsz3414, 1, `PreSch Count`)\n\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 30342.65 ymin: 32035.6 xmax: 31453.96 ymax: 33233.11\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      126          6  LAVENDER    KLSZ06      N    KALLANG         KL\n        REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR\n1 CENTRAL REGION       CR A7A07F328A38B6EF 2014-12-05 30874.41 32569.53\n  SHAPE_Leng SHAPE_Area                       geometry PreSch Count\n1    3609.15   757907.6 MULTIPOLYGON (((31389.56 32...          253\n\n\nDisplay count of preschools in subzone number\n\naggregate(`PreSch Count` ~ SUBZONE_NO, mpsz3414, FUN=sum)\n\n   SUBZONE_NO PreSch Count\n1           1          426\n2           2          372\n3           3          522\n4           4          340\n5           5          314\n6           6          337\n7           7          124\n8           8          101\n9           9          146\n10         10          154\n11         11           91\n12         12           55\n13         13           57\n14         14           35\n15         15           16\n16         16           39\n17         17            7\n\n\nCount density by planning subzone\n\nmpsz3414$Area <- mpsz3414 %>%\n  st_area()\nmpsz3414 <- mpsz3414 %>%\n  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)\nhead(mpsz3414)\n\nSimple feature collection with 6 features and 18 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 24468.89 ymin: 28369.47 xmax: 32362.39 ymax: 30542.74\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n6        6          7 ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6         BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry PreSch Count\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...            8\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...           26\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...           48\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...            2\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...            1\n6 29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...            7\n             Area     PreSch Density\n1 1630379.3 [m^2]   4.906834 [1/m^2]\n2  559816.2 [m^2]  46.443811 [1/m^2]\n3  160807.5 [m^2] 298.493545 [1/m^2]\n4  595428.9 [m^2]   3.358923 [1/m^2]\n5  387429.4 [m^2]   2.581115 [1/m^2]\n6 1030378.8 [m^2]   6.793618 [1/m^2]"
  },
  {
    "objectID": "Hands-On-Exercises/chapter-03/HOE2.html",
    "href": "Hands-On-Exercises/chapter-03/HOE2.html",
    "title": "Hands-On Exercise 3: Choropleth Mapping",
    "section": "",
    "text": "Sorry, I couldn’t finish this earlier because I had trouble with my R installation. I had to download an older version."
  },
  {
    "objectID": "Hands-On-Exercises/chapter-03/HOE2.html#using-qtm",
    "href": "Hands-On-Exercises/chapter-03/HOE2.html#using-qtm",
    "title": "Hands-On Exercise 3: Choropleth Mapping",
    "section": "Using qtm()",
    "text": "Using qtm()\n\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")"
  },
  {
    "objectID": "Hands-On-Exercises/chapter-03/HOE2.html#using-tmap-attributes",
    "href": "Hands-On-Exercises/chapter-03/HOE2.html#using-tmap-attributes",
    "title": "Hands-On Exercise 3: Choropleth Mapping",
    "section": "Using tmap attributes",
    "text": "Using tmap attributes\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\nAnatomy of tmap\n\nBase: tm_shape()\nLayers: tm_fill(), tm_polygons()\n\n\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n\n\n\n\nUsing tm_polygons()\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\nUsing tm_fill()\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\nGive borders\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1)\n\n\n\n\n\n\nData classification methods\nQuantile data classification with 5 classes (built-in)\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nCustom category breaks\nCheck the summary statistics\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.0000  0.6540  0.7063  0.7712  0.7657 19.0000      92 \n\n\nWe set break point at 0.60, 0.70, 0.80, 0.90. Additionally, we set minimum to 0 and maximum to 100.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-On-Exercises/chapter-03/HOE2.html#color-scheme",
    "href": "Hands-On-Exercises/chapter-03/HOE2.html#color-scheme",
    "title": "Hands-On Exercise 3: Choropleth Mapping",
    "section": "Color Scheme",
    "text": "Color Scheme\nUsing ColourBrewer palette\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-On-Exercises/chapter-03/HOE2.html#map-layout",
    "href": "Hands-On-Exercises/chapter-03/HOE2.html#map-layout",
    "title": "Hands-On Exercise 3: Choropleth Mapping",
    "section": "Map Layout",
    "text": "Map Layout\nWhole cohesive map - title, scale bar, compass, margins, aspect ratios, legends, etc.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nMap style\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\n\n\n\n\n\nCartographic furniture\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))"
  },
  {
    "objectID": "Hands-On-Exercises/chapter-03/HOE2.html#small-multiples-facets",
    "href": "Hands-On-Exercises/chapter-03/HOE2.html#small-multiples-facets",
    "title": "Hands-On Exercise 3: Choropleth Mapping",
    "section": "Small Multiples / Facets",
    "text": "Small Multiples / Facets\nReset to default style\n\ntmap_style(\"white\")\n\n\n1. Assign multiple values to one of the aesthetic arguments\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\n\n2. Define group-by variable in tm_facets()\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n3. Multiple stand-alone maps with tmap_arrange()\n\nyoungmap <- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap <- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-On-Exercises/chapter-03/HOE2.html#mapping-spatial-object-meeting-a-selection-criterion",
    "href": "Hands-On-Exercises/chapter-03/HOE2.html#mapping-spatial-object-meeting-a-selection-criterion",
    "title": "Hands-On Exercise 3: Choropleth Mapping",
    "section": "Mapping Spatial Object Meeting a Selection Criterion",
    "text": "Mapping Spatial Object Meeting a Selection Criterion\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-On-Exercises/chapter-04/HOE3.html",
    "href": "Hands-On-Exercises/chapter-04/HOE3.html",
    "title": "Hands-On Exercise 4 & 5: Spatial Point Patterns Analysis",
    "section": "",
    "text": "pacman::p_load(maptools, sf, raster, spatstat, tmap)"
  },
  {
    "objectID": "Hands-On-Exercises/chapter-04/HOE3.html#spatial-data",
    "href": "Hands-On-Exercises/chapter-04/HOE3.html#spatial-data",
    "title": "Hands-On Exercise 4 & 5: Spatial Point Patterns Analysis",
    "section": "Spatial Data",
    "text": "Spatial Data\n\nchildcare_sf <- st_read(\"data/geospatial/childcare.geojson\") %>%\n  st_transform(crs = 3414)\n\nReading layer `childcare' from data source \n  `C:\\Jenpoer\\IS415-GAA\\Hands-On-Exercises\\chapter-04\\data\\geospatial\\childcare.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\nsg_sf <- st_read(dsn = \"data/geospatial/CostalOutline\", layer=\"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `C:\\Jenpoer\\IS415-GAA\\Hands-On-Exercises\\chapter-04\\data\\geospatial\\CostalOutline' \n  using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\n\n\nmpsz_sf <- st_read(dsn = \"../chapter-02/data/geospatial/master-plan-2014-subzone-boundary-web-shp\",\n                   layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Jenpoer\\IS415-GAA\\Hands-On-Exercises\\chapter-02\\data\\geospatial\\master-plan-2014-subzone-boundary-web-shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21"
  },
  {
    "objectID": "Hands-On-Exercises/chapter-04/HOE3.html#retrieve-referencing-system-information-of-geospatial-data",
    "href": "Hands-On-Exercises/chapter-04/HOE3.html#retrieve-referencing-system-information-of-geospatial-data",
    "title": "Hands-On Exercise 4 & 5: Spatial Point Patterns Analysis",
    "section": "Retrieve referencing system information of geospatial data",
    "text": "Retrieve referencing system information of geospatial data\nChildcare: EPSG 3414, Projection CRS SVY21\n\nst_geometry(childcare_sf)\n\nGeometry set for 1545 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 11203.01 ymin: 25667.6 xmax: 45404.24 ymax: 49300.88\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\nFirst 5 geometries:\n\n\n\nst_crs(childcare_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nSG: EPSG 9001, Projection CRS SVY21\n\nst_geometry(sg_sf)\n\nGeometry set for 60 features \nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\n\nst_crs(sg_sf)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\nMPSZ: EPSG 9001, Projection CRS SVY21\n\nst_geometry(mpsz_sf)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\n\nst_crs(mpsz_sf)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]"
  },
  {
    "objectID": "Hands-On-Exercises/chapter-04/HOE3.html#assign-correct-crs-information",
    "href": "Hands-On-Exercises/chapter-04/HOE3.html#assign-correct-crs-information",
    "title": "Hands-On Exercise 4 & 5: Spatial Point Patterns Analysis",
    "section": "Assign correct crs information",
    "text": "Assign correct crs information\nSG & MPSZ\nWe only need to change the crs because it is already the correct projection.\n\nmpsz_sf <- st_set_crs(mpsz_sf, 3414)\nsg_sf <- st_set_crs(sg_sf, 3414)"
  },
  {
    "objectID": "Hands-On-Exercises/chapter-04/HOE3.html#conversion-from-sfs-simple-feature-data-frame-to-sps-spatial-class",
    "href": "Hands-On-Exercises/chapter-04/HOE3.html#conversion-from-sfs-simple-feature-data-frame-to-sps-spatial-class",
    "title": "Hands-On Exercise 4 & 5: Spatial Point Patterns Analysis",
    "section": "Conversion from sf’s simple feature data frame to sp’s Spatial* class",
    "text": "Conversion from sf’s simple feature data frame to sp’s Spatial* class\n\nchildcare <- as_Spatial(childcare_sf)\nmpsz <- as_Spatial(mpsz_sf)\nsg <- as_Spatial(sg_sf)\n\n\nsummary(childcare)\n\nObject of class SpatialPointsDataFrame\nCoordinates:\n               min      max\ncoords.x1 11203.01 45404.24\ncoords.x2 25667.60 49300.88\ncoords.x3     0.00     0.00\nIs projected: TRUE \nproj4string :\n[+proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1\n+x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0\n+units=m +no_defs]\nNumber of points: 1545\nData attributes:\n     Name           Description       \n Length:1545        Length:1545       \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n\n\n\nsummary(mpsz)\n\nObject of class SpatialPolygonsDataFrame\nCoordinates:\n        min      max\nx  2667.538 56396.44\ny 15748.721 50256.33\nIs projected: TRUE \nproj4string :\n[+proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1\n+x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0\n+units=m +no_defs]\nData attributes:\n    OBJECTID       SUBZONE_NO      SUBZONE_N          SUBZONE_C        \n Min.   :  1.0   Min.   : 1.000   Length:323         Length:323        \n 1st Qu.: 81.5   1st Qu.: 2.000   Class :character   Class :character  \n Median :162.0   Median : 4.000   Mode  :character   Mode  :character  \n Mean   :162.0   Mean   : 4.625                                        \n 3rd Qu.:242.5   3rd Qu.: 6.500                                        \n Max.   :323.0   Max.   :17.000                                        \n    CA_IND           PLN_AREA_N         PLN_AREA_C          REGION_N        \n Length:323         Length:323         Length:323         Length:323        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n   REGION_C           INC_CRC            FMEL_UPD_D             X_ADDR     \n Length:323         Length:323         Min.   :2014-12-05   Min.   : 5093  \n Class :character   Class :character   1st Qu.:2014-12-05   1st Qu.:21864  \n Mode  :character   Mode  :character   Median :2014-12-05   Median :28465  \n                                       Mean   :2014-12-05   Mean   :27257  \n                                       3rd Qu.:2014-12-05   3rd Qu.:31674  \n                                       Max.   :2014-12-05   Max.   :50425  \n     Y_ADDR        SHAPE_Leng        SHAPE_Area      \n Min.   :19579   Min.   :  871.5   Min.   :   39438  \n 1st Qu.:31776   1st Qu.: 3709.6   1st Qu.:  628261  \n Median :35113   Median : 5211.9   Median : 1229894  \n Mean   :36106   Mean   : 6524.4   Mean   : 2420882  \n 3rd Qu.:39869   3rd Qu.: 6942.6   3rd Qu.: 2106483  \n Max.   :49553   Max.   :68083.9   Max.   :69748299  \n\n\n\nsummary(sg)\n\nObject of class SpatialPolygonsDataFrame\nCoordinates:\n        min      max\nx  2663.926 56047.79\ny 16357.981 50244.03\nIs projected: TRUE \nproj4string :\n[+proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1\n+x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0\n+units=m +no_defs]\nData attributes:\n    GDO_GID          MSLINK          MAPID    COSTAL_NAM       \n Min.   : 1.00   Min.   : 1.00   Min.   :0   Length:60         \n 1st Qu.:15.75   1st Qu.:17.75   1st Qu.:0   Class :character  \n Median :30.50   Median :33.50   Median :0   Mode  :character  \n Mean   :30.50   Mean   :33.77   Mean   :0                     \n 3rd Qu.:45.25   3rd Qu.:49.25   3rd Qu.:0                     \n Max.   :60.00   Max.   :67.00   Max.   :0"
  },
  {
    "objectID": "Hands-On-Exercises/chapter-04/HOE3.html#conversion-from-spatial-class-to-generic-sp-format-spatial",
    "href": "Hands-On-Exercises/chapter-04/HOE3.html#conversion-from-spatial-class-to-generic-sp-format-spatial",
    "title": "Hands-On Exercise 4 & 5: Spatial Point Patterns Analysis",
    "section": "Conversion from Spatial* class to generic sp format (Spatial)",
    "text": "Conversion from Spatial* class to generic sp format (Spatial)\n\nchildcare_sp <- as(childcare, \"SpatialPoints\")\nsg_sp <- as(sg, \"SpatialPolygons\")\n\n\nchildcare_sp\n\nclass       : SpatialPoints \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\nsg_sp\n\nclass       : SpatialPolygons \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs"
  },
  {
    "objectID": "Hands-On-Exercises/chapter-04/HOE3.html#conversion-from-generic-sp-format-to-spatstats-ppp",
    "href": "Hands-On-Exercises/chapter-04/HOE3.html#conversion-from-generic-sp-format-to-spatstats-ppp",
    "title": "Hands-On Exercise 4 & 5: Spatial Point Patterns Analysis",
    "section": "Conversion from generic sp format to spatstat’s ppp",
    "text": "Conversion from generic sp format to spatstat’s ppp\n\nchildcare_ppp <- as(childcare_sp, \"ppp\")\nchildcare_ppp\n\nPlanar point pattern: 1545 points\nwindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n\n\n\nplot(childcare_ppp)\n\n\n\n\n\nsummary(childcare_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units\n\n\n\n\n\n\n\n\nDuplicated points may be problematic in spatial point patterns analysis. This is because the statistical methodology used for spatial point patterns analysis assumes that points cannot be coincident."
  },
  {
    "objectID": "Hands-On-Exercises/chapter-04/HOE3.html#handling-duplicated-points",
    "href": "Hands-On-Exercises/chapter-04/HOE3.html#handling-duplicated-points",
    "title": "Hands-On Exercise 4 & 5: Spatial Point Patterns Analysis",
    "section": "Handling duplicated points",
    "text": "Handling duplicated points\nCheck for duplication\n\nany(duplicated(childcare_ppp))\n\n[1] TRUE\n\n\nCount the number of coincident points\n\nsum(multiplicity(childcare_ppp) > 1)\n\n[1] 128\n\n\nView locations of duplicate point events\n\ntmap_mode('view')\ntm_shape(childcare) +\n  tm_dots(alpha=0.4, \n          size=0.05)\n\n\n\n\n\n\nWe can see duplicate points because they are more opaque (multiple points overlapping exactly on the same spot).\n\ntmap_mode('plot')\n\nThere are three approaches to this problem.\n\nDelete the duplicates: But some useful point events will be lost.\nJittering: Add a small perturbation to the duplicate points so that they do not occupy the exact same space.\nMarks: make each point “unique” and then attach the duplicates of the points to the patterns as marks (attributes of the points). Then, we need analytical techniques that take into account these marks.\n\nThis code implements jittering.\n\nchildcare_ppp_jit <- rjitter(childcare_ppp,\n                             retru=TRUE,\n                             nsim=1,\n                             drop=TRUE)\n\n\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE"
  },
  {
    "objectID": "Hands-On-Exercises/chapter-04/HOE3.html#creating-spatstats-owin-object",
    "href": "Hands-On-Exercises/chapter-04/HOE3.html#creating-spatstats-owin-object",
    "title": "Hands-On Exercise 4 & 5: Spatial Point Patterns Analysis",
    "section": "Creating spatstat’s owin object",
    "text": "Creating spatstat’s owin object\nspatstat’s owin object is specially designed to represent a polygonal region.\n\nsg_owin <- as(sg_sp, \"owin\")\n\n\nplot(sg_owin)\n\n\n\n\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n60 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         38 1.56140e+04      2.09e-05\npolygon 2        735 4.69093e+06      6.27e-03\npolygon 3         49 1.66986e+04      2.23e-05\npolygon 4         76 3.12332e+05      4.17e-04\npolygon 5       5141 6.36179e+08      8.50e-01\npolygon 6         42 5.58317e+04      7.46e-05\npolygon 7         67 1.31354e+06      1.75e-03\npolygon 8         15 4.46420e+03      5.96e-06\npolygon 9         14 5.46674e+03      7.30e-06\npolygon 10        37 5.26194e+03      7.03e-06\npolygon 11        53 3.44003e+04      4.59e-05\npolygon 12        74 5.82234e+04      7.78e-05\npolygon 13        69 5.63134e+04      7.52e-05\npolygon 14       143 1.45139e+05      1.94e-04\npolygon 15       165 3.38736e+05      4.52e-04\npolygon 16       130 9.40465e+04      1.26e-04\npolygon 17        19 1.80977e+03      2.42e-06\npolygon 18        16 2.01046e+03      2.69e-06\npolygon 19        93 4.30642e+05      5.75e-04\npolygon 20        90 4.15092e+05      5.54e-04\npolygon 21       721 1.92795e+06      2.57e-03\npolygon 22       330 1.11896e+06      1.49e-03\npolygon 23       115 9.28394e+05      1.24e-03\npolygon 24        37 1.01705e+04      1.36e-05\npolygon 25        25 1.66227e+04      2.22e-05\npolygon 26        10 2.14507e+03      2.86e-06\npolygon 27       190 2.02489e+05      2.70e-04\npolygon 28       175 9.25904e+05      1.24e-03\npolygon 29      1993 9.99217e+06      1.33e-02\npolygon 30        38 2.42492e+04      3.24e-05\npolygon 31        24 6.35239e+03      8.48e-06\npolygon 32        53 6.35791e+05      8.49e-04\npolygon 33        41 1.60161e+04      2.14e-05\npolygon 34        22 2.54368e+03      3.40e-06\npolygon 35        30 1.08382e+04      1.45e-05\npolygon 36       327 2.16921e+06      2.90e-03\npolygon 37       111 6.62927e+05      8.85e-04\npolygon 38        90 1.15991e+05      1.55e-04\npolygon 39        98 6.26829e+04      8.37e-05\npolygon 40       415 3.25384e+06      4.35e-03\npolygon 41       222 1.51142e+06      2.02e-03\npolygon 42       107 6.33039e+05      8.45e-04\npolygon 43         7 2.48299e+03      3.32e-06\npolygon 44        17 3.28303e+04      4.38e-05\npolygon 45        26 8.34758e+03      1.11e-05\npolygon 46       177 4.67446e+05      6.24e-04\npolygon 47        16 3.19460e+03      4.27e-06\npolygon 48        15 4.87296e+03      6.51e-06\npolygon 49        66 1.61841e+04      2.16e-05\npolygon 50       149 5.63430e+06      7.53e-03\npolygon 51       609 2.62570e+07      3.51e-02\npolygon 52         8 7.82256e+03      1.04e-05\npolygon 53       976 2.33447e+07      3.12e-02\npolygon 54        55 8.25379e+04      1.10e-04\npolygon 55       976 2.33447e+07      3.12e-02\npolygon 56        61 3.33449e+05      4.45e-04\npolygon 57         6 1.68410e+04      2.25e-05\npolygon 58         4 9.45963e+03      1.26e-05\npolygon 59        46 6.99702e+05      9.35e-04\npolygon 60        13 7.00873e+04      9.36e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 748741000 square units\nFraction of frame area: 0.414"
  },
  {
    "objectID": "Hands-On-Exercises/chapter-04/HOE3.html#combining-point-events-object-and-owin-object",
    "href": "Hands-On-Exercises/chapter-04/HOE3.html#combining-point-events-object-and-owin-object",
    "title": "Hands-On Exercise 4 & 5: Spatial Point Patterns Analysis",
    "section": "Combining point events object and owin object",
    "text": "Combining point events object and owin object\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\n\n\nsummary(childcareSG_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 2.063463e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: polygonal boundary\n60 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         38 1.56140e+04      2.09e-05\npolygon 2        735 4.69093e+06      6.27e-03\npolygon 3         49 1.66986e+04      2.23e-05\npolygon 4         76 3.12332e+05      4.17e-04\npolygon 5       5141 6.36179e+08      8.50e-01\npolygon 6         42 5.58317e+04      7.46e-05\npolygon 7         67 1.31354e+06      1.75e-03\npolygon 8         15 4.46420e+03      5.96e-06\npolygon 9         14 5.46674e+03      7.30e-06\npolygon 10        37 5.26194e+03      7.03e-06\npolygon 11        53 3.44003e+04      4.59e-05\npolygon 12        74 5.82234e+04      7.78e-05\npolygon 13        69 5.63134e+04      7.52e-05\npolygon 14       143 1.45139e+05      1.94e-04\npolygon 15       165 3.38736e+05      4.52e-04\npolygon 16       130 9.40465e+04      1.26e-04\npolygon 17        19 1.80977e+03      2.42e-06\npolygon 18        16 2.01046e+03      2.69e-06\npolygon 19        93 4.30642e+05      5.75e-04\npolygon 20        90 4.15092e+05      5.54e-04\npolygon 21       721 1.92795e+06      2.57e-03\npolygon 22       330 1.11896e+06      1.49e-03\npolygon 23       115 9.28394e+05      1.24e-03\npolygon 24        37 1.01705e+04      1.36e-05\npolygon 25        25 1.66227e+04      2.22e-05\npolygon 26        10 2.14507e+03      2.86e-06\npolygon 27       190 2.02489e+05      2.70e-04\npolygon 28       175 9.25904e+05      1.24e-03\npolygon 29      1993 9.99217e+06      1.33e-02\npolygon 30        38 2.42492e+04      3.24e-05\npolygon 31        24 6.35239e+03      8.48e-06\npolygon 32        53 6.35791e+05      8.49e-04\npolygon 33        41 1.60161e+04      2.14e-05\npolygon 34        22 2.54368e+03      3.40e-06\npolygon 35        30 1.08382e+04      1.45e-05\npolygon 36       327 2.16921e+06      2.90e-03\npolygon 37       111 6.62927e+05      8.85e-04\npolygon 38        90 1.15991e+05      1.55e-04\npolygon 39        98 6.26829e+04      8.37e-05\npolygon 40       415 3.25384e+06      4.35e-03\npolygon 41       222 1.51142e+06      2.02e-03\npolygon 42       107 6.33039e+05      8.45e-04\npolygon 43         7 2.48299e+03      3.32e-06\npolygon 44        17 3.28303e+04      4.38e-05\npolygon 45        26 8.34758e+03      1.11e-05\npolygon 46       177 4.67446e+05      6.24e-04\npolygon 47        16 3.19460e+03      4.27e-06\npolygon 48        15 4.87296e+03      6.51e-06\npolygon 49        66 1.61841e+04      2.16e-05\npolygon 50       149 5.63430e+06      7.53e-03\npolygon 51       609 2.62570e+07      3.51e-02\npolygon 52         8 7.82256e+03      1.04e-05\npolygon 53       976 2.33447e+07      3.12e-02\npolygon 54        55 8.25379e+04      1.10e-04\npolygon 55       976 2.33447e+07      3.12e-02\npolygon 56        61 3.33449e+05      4.45e-04\npolygon 57         6 1.68410e+04      2.25e-05\npolygon 58         4 9.45963e+03      1.26e-05\npolygon 59        46 6.99702e+05      9.35e-04\npolygon 60        13 7.00873e+04      9.36e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 748741000 square units\nFraction of frame area: 0.414\n\n\n\nplot(childcareSG_ppp)"
  },
  {
    "objectID": "Hands-On-Exercises/chapter-04/HOE3.html#kernel-density-estimation",
    "href": "Hands-On-Exercises/chapter-04/HOE3.html#kernel-density-estimation",
    "title": "Hands-On Exercise 4 & 5: Spatial Point Patterns Analysis",
    "section": "Kernel Density Estimation",
    "text": "Kernel Density Estimation\n\nComputing KDE using automatic bandwidth selection method\n\nkde_childcareSG_bw <- density(childcareSG_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\")\n\n\nplot(kde_childcareSG_bw)\n\n\n\n\nBandwidth:\n\nbw <- bw.diggle(childcareSG_ppp)\nbw\n\n   sigma \n298.4095 \n\n\n\n\nRescaling KDE values\n\nchildcareSG_ppp.km <- rescale(childcareSG_ppp, 1000, \"km\")\n\n\nkde_childcareSG.bw <- density(childcareSG_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")\nplot(kde_childcareSG.bw)\n\n\n\n\n\n\nDifferent automatic bandwidth methods\n\nbw.CvL(childcareSG_ppp.km)\n\n   sigma \n4.543278 \n\n\n\nbw.scott(childcareSG_ppp.km)\n\n sigma.x  sigma.y \n2.224898 1.450966 \n\n\n\nbw.ppl(childcareSG_ppp.km)\n\n    sigma \n0.3897114 \n\n\n\nbw.diggle(childcareSG_ppp.km)\n\n    sigma \n0.2984095 \n\n\nbw.diggle vs bw.ppl\n\nkde_childcareSG.ppl <- density(childcareSG_ppp.km, \n                               sigma=bw.ppl, \n                               edge=TRUE,\n                               kernel=\"gaussian\")\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"bw.diggle\")\nplot(kde_childcareSG.ppl, main = \"bw.ppl\")\n\n\n\n\n\npar(mfrow=c(2,2))\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"Gaussian\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"epanechnikov\"), \n     main=\"Epanechnikov\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"quartic\"), \n     main=\"Quartic\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"disc\"), \n     main=\"Disc\")\n\n\n\n\n\n\nFixed and Adaptive KDE\nFixed Bandwidth\n\nkde_childcareSG_600 <- density(childcareSG_ppp.km, sigma=0.6, edge=TRUE, kernel=\"gaussian\")\nplot(kde_childcareSG_600)\n\n\n\n\nAdaptive Bandwidth\n\nkde_childcareSG_adaptive <- adaptive.density(childcareSG_ppp.km, method=\"kernel\")\nplot(kde_childcareSG_adaptive)\n\n\n\n\n\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"Fixed bandwidth\")\nplot(kde_childcareSG_adaptive, main = \"Adaptive bandwidth\")\n\n\n\n\n\n\nConverting KDE output into grid object\n\ngridded_kde_childcareSG_bw <- as.SpatialGridDataFrame.im(kde_childcareSG.bw)\nspplot(gridded_kde_childcareSG_bw)\n\n\n\n\n\n\nConverting into raster\n\nkde_childcareSG_bw_raster <- raster(gridded_kde_childcareSG_bw)\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -8.476185e-15, 28.51831  (min, max)\n\n\n\nAssigning projection systems\n\nprojection(kde_childcareSG_bw_raster) <- CRS(\"+init=EPSG:3414\")\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : +init=EPSG:3414 \nsource     : memory\nnames      : v \nvalues     : -8.476185e-15, 28.51831  (min, max)\n\n\n\n\nPlot in tmap\n\ntm_shape(kde_childcareSG_bw_raster) + \n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\n\n\n\n\n\n\nComparing spatial point patterns using KDE\nExtracting study areas\n\npg = mpsz[mpsz@data$PLN_AREA_N == \"PUNGGOL\",]\ntm = mpsz[mpsz@data$PLN_AREA_N == \"TAMPINES\",]\nck = mpsz[mpsz@data$PLN_AREA_N == \"CHOA CHU KANG\",]\njw = mpsz[mpsz@data$PLN_AREA_N == \"JURONG WEST\",]\n\nPlotting target planning areas\n\npar(mfrow=c(2,2))\nplot(pg, main = \"Ponggol\")\nplot(tm, main = \"Tampines\")\nplot(ck, main = \"Choa Chu Kang\")\nplot(jw, main = \"Jurong West\")\n\n\n\n\nConverting into generic sp format\n\npg_sp = as(pg, \"SpatialPolygons\")\ntm_sp = as(tm, \"SpatialPolygons\")\nck_sp = as(ck, \"SpatialPolygons\")\njw_sp = as(jw, \"SpatialPolygons\")\n\nCreating owin object\n\npg_owin = as(pg_sp, \"owin\")\ntm_owin = as(tm_sp, \"owin\")\nck_owin = as(ck_sp, \"owin\")\njw_owin = as(jw_sp, \"owin\")\n\nCombining childcare points and the study area\n\nchildcare_pg_ppp = childcare_ppp_jit[pg_owin]\nchildcare_tm_ppp = childcare_ppp_jit[tm_owin]\nchildcare_ck_ppp = childcare_ppp_jit[ck_owin]\nchildcare_jw_ppp = childcare_ppp_jit[jw_owin]\n\n\nchildcare_pg_ppp.km = rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km = rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km = rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km = rescale(childcare_jw_ppp, 1000, \"km\")\n\n\npar(mfrow=c(2,2))\nplot(childcare_pg_ppp.km, main=\"Punggol\")\nplot(childcare_tm_ppp.km, main=\"Tampines\")\nplot(childcare_ck_ppp.km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp.km, main=\"Jurong West\")\n\n\n\n\nComputing KDE\n\npar(mfrow=c(2,2))\nplot(density(childcare_pg_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tempines\")\nplot(density(childcare_ck_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"JUrong West\")\n\n\n\n\nFixed bandwidth KDE\n\npar(mfrow=c(2,2))\nplot(density(childcare_ck_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Chou Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"JUrong West\")\nplot(density(childcare_pg_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")"
  },
  {
    "objectID": "Hands-On-Exercises/chapter-04/HOE3.html#nearest-neighbors-analysis",
    "href": "Hands-On-Exercises/chapter-04/HOE3.html#nearest-neighbors-analysis",
    "title": "Hands-On Exercise 4 & 5: Spatial Point Patterns Analysis",
    "section": "Nearest Neighbors Analysis",
    "text": "Nearest Neighbors Analysis\nClark and Evans Test\n\nclarkevans.test(childcareSG_ppp,\n                correction=\"none\",\n                clipregion=\"sg_owin\",\n                alternative=c(\"clustered\"),\n                nsim=99)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 99 simulations of CSR with fixed n\n\ndata:  childcareSG_ppp\nR = 0.54756, p-value = 0.01\nalternative hypothesis: clustered (R < 1)\n\n\nChoa Chu Kang\n\nclarkevans.test(childcare_ck_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 999 simulations of CSR with fixed n\n\ndata:  childcare_ck_ppp\nR = 0.97608, p-value = 0.284\nalternative hypothesis: two-sided\n\n\nTampines\n\nclarkevans.test(childcare_tm_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 999 simulations of CSR with fixed n\n\ndata:  childcare_tm_ppp\nR = 0.82101, p-value = 0.002\nalternative hypothesis: two-sided"
  },
  {
    "objectID": "Hands-On-Exercises/chapter-04/HOE3.html#g-function",
    "href": "Hands-On-Exercises/chapter-04/HOE3.html#g-function",
    "title": "Hands-On Exercise 4 & 5: Spatial Point Patterns Analysis",
    "section": "G-Function",
    "text": "G-Function\n\nChoa Chu Kang\nComputing G-function estimation\n\nG_CK = Gest(childcare_ck_ppp, correction = \"border\")\nplot(G_CK, xlim=c(0,500))\n\n\n\n\nPerforming Complete Spatial Randomness Test\nHypothesis test\nHo = The distribution of childcare services at Choa Chu Kang are randomly distributed\nH1 = The distribution of childcare services at Choa Chu Kang are not randomly distributed\nHo rejected if p-value smaller than alpha = 0.001\n\nG_CK.csr <- envelope(childcare_ck_ppp, Gest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60........\n.70.........80.........90.........100.........110.........120.........130......\n...140.........150.........160.........170.........180.........190.........200....\n.....210.........220.........230.........240.........250.........260.........270..\n.......280.........290.........300.........310.........320.........330.........340\n.........350.........360.........370.........380.........390.........400........\n.410.........420.........430.........440.........450.........460.........470......\n...480.........490.........500.........510.........520.........530.........540....\n.....550.........560.........570.........580.........590.........600.........610..\n.......620.........630.........640.........650.........660.........670.........680\n.........690.........700.........710.........720.........730.........740........\n.750.........760.........770.........780.........790.........800.........810......\n...820.........830.........840.........850.........860.........870.........880....\n.....890.........900.........910.........920.........930.........940.........950..\n.......960.........970.........980.........990........ 999.\n\nDone.\n\n\n\nplot(G_CK.csr)\n\n\n\n\n\n\nTampines\nComputing G-function estimation\n\nG_tm = Gest(childcare_tm_ppp, correction = \"best\")\nplot(G_tm)\n\n\n\n\nSpatial Randomness test\n\nG_tm.csr <- envelope(childcare_tm_ppp, Gest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60........\n.70.........80.........90.........100.........110.........120.........130......\n...140.........150.........160.........170.........180.........190.........200....\n.....210.........220.........230.........240.........250.........260.........270..\n.......280.........290.........300.........310.........320.........330.........340\n.........350.........360.........370.........380.........390.........400........\n.410.........420.........430.........440.........450.........460.........470......\n...480.........490.........500.........510.........520.........530.........540....\n.....550.........560.........570.........580.........590.........600.........610..\n.......620.........630.........640.........650.........660.........670.........680\n.........690.........700.........710.........720.........730.........740........\n.750.........760.........770.........780.........790.........800.........810......\n...820.........830.........840.........850.........860.........870.........880....\n.....890.........900.........910.........920.........930.........940.........950..\n.......960.........970.........980.........990........ 999.\n\nDone.\n\n\n\nplot(G_tm.csr)"
  },
  {
    "objectID": "Hands-On-Exercises/chapter-04/HOE3.html#f-function",
    "href": "Hands-On-Exercises/chapter-04/HOE3.html#f-function",
    "title": "Hands-On Exercise 4 & 5: Spatial Point Patterns Analysis",
    "section": "F-Function",
    "text": "F-Function\n\nChoa Chu Kang\nComputing F-function estimation\n\nF_CK = Fest(childcare_ck_ppp)\nplot(F_CK)\n\n\n\n\nPerforming complete Spatial Randomness Test\n\nF_CK.csr <- envelope(childcare_ck_ppp, Fest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60........\n.70.........80.........90.........100.........110.........120.........130......\n...140.........150.........160.........170.........180.........190.........200....\n.....210.........220.........230.........240.........250.........260.........270..\n.......280.........290.........300.........310.........320.........330.........340\n.........350.........360.........370.........380.........390.........400........\n.410.........420.........430.........440.........450.........460.........470......\n...480.........490.........500.........510.........520.........530.........540....\n.....550.........560.........570.........580.........590.........600.........610..\n.......620.........630.........640.........650.........660.........670.........680\n.........690.........700.........710.........720.........730.........740........\n.750.........760.........770.........780.........790.........800.........810......\n...820.........830.........840.........850.........860.........870.........880....\n.....890.........900.........910.........920.........930.........940.........950..\n.......960.........970.........980.........990........ 999.\n\nDone.\n\n\n\nplot(F_CK.csr)\n\n\n\n\n\n\nTampines\nComputing F-function estimation\n\nF_tm = Fest(childcare_tm_ppp, correction = \"best\")\nplot(F_tm)\n\n\n\n\nPerforming complete Spatial Randomness Test\n\nF_tm.csr <- envelope(childcare_tm_ppp, Fest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60........\n.70.........80.........90.........100.........110.........120.........130......\n...140.........150.........160.........170.........180.........190.........200....\n.....210.........220.........230.........240.........250.........260.........270..\n.......280.........290.........300.........310.........320.........330.........340\n.........350.........360.........370.........380.........390.........400........\n.410.........420.........430.........440.........450.........460.........470......\n...480.........490.........500.........510.........520.........530.........540....\n.....550.........560.........570.........580.........590.........600.........610..\n.......620.........630.........640.........650.........660.........670.........680\n.........690.........700.........710.........720.........730.........740........\n.750.........760.........770.........780.........790.........800.........810......\n...820.........830.........840.........850.........860.........870.........880....\n.....890.........900.........910.........920.........930.........940.........950..\n.......960.........970.........980.........990........ 999.\n\nDone.\n\n\n\nplot(F_tm.csr)"
  },
  {
    "objectID": "Hands-On-Exercises/chapter-04/HOE3.html#k-function",
    "href": "Hands-On-Exercises/chapter-04/HOE3.html#k-function",
    "title": "Hands-On Exercise 4 & 5: Spatial Point Patterns Analysis",
    "section": "K-Function",
    "text": "K-Function\n\nChoa Chu Kang\nComputing K-function estimate\n\nK_ck = Kest(childcare_ck_ppp, correction = \"Ripley\")\nplot(K_ck, . -r ~ r, ylab= \"K(d)-r\", xlab = \"d(m)\")\n\n\n\n\nPerforming complete Spatial Randomness Test\n\nK_ck.csr <- envelope(childcare_ck_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,  99.\n\nDone.\n\n\n\nplot(K_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"K(d)-r\")\n\n\n\n\n\n\nTampines\nComputing K-function estimation\n\nK_tm = Kest(childcare_tm_ppp, correction = \"Ripley\")\nplot(K_tm, . -r ~ r, \n     ylab= \"K(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\nPerforming complete Spatial Randomness Test\n\nK_tm.csr <- envelope(childcare_tm_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,  99.\n\nDone.\n\n\n\nplot(K_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"K(d)-r\", xlim=c(0,500))"
  },
  {
    "objectID": "Hands-On-Exercises/chapter-04/HOE3.html#l-function",
    "href": "Hands-On-Exercises/chapter-04/HOE3.html#l-function",
    "title": "Hands-On Exercise 4 & 5: Spatial Point Patterns Analysis",
    "section": "L-Function",
    "text": "L-Function\n\nChoa Chu Kang\nComputing L Function estimation\n\nL_ck = Lest(childcare_ck_ppp, correction = \"Ripley\")\nplot(L_ck, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\")\n\n\n\n\nPerforming complete Spatial Randomness Test\n\nL_ck.csr <- envelope(childcare_ck_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,  99.\n\nDone.\n\n\n\nplot(L_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")\n\n\n\n\n\n\nTampines\nComputing L-function estimate\n\nL_tm = Lest(childcare_tm_ppp, correction = \"Ripley\")\nplot(L_tm, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\nPerforming complete Spatial Randomness Test\n\nL_tm.csr <- envelope(childcare_tm_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,  99.\n\nDone.\n\n\n\nplot(L_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"L(d)-r\", xlim=c(0,500))"
  },
  {
    "objectID": "In-Class-Exercises/chapter-02/ICE2.html",
    "href": "In-Class-Exercises/chapter-02/ICE2.html",
    "title": "In-Class Exercise 2: Thematic and Analytical Mapping",
    "section": "",
    "text": "pacman::p_load(sf, tidyverse, funModeling)\n\n\n\n\nNigeria Level-2 Administrative Boundaries from Humanitarian Data Exchange or GeoBoundaries\n\ngeoNGA <- st_read(dsn = \"data/geospatial/geoNGA\", \n                layer = \"geoBoundaries-NGA-ADM2\") %>%\n                st_transform(crs = 26392)\n\nReading layer `geoBoundaries-NGA-ADM2' from data source \n  `C:\\Jenpoer\\IS415-GAA\\In-Class-Exercises\\chapter-02\\data\\geospatial\\geoNGA' \n  using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84\n\n\n\nnga <- st_read(dsn = \"data/geospatial/NGA\", \n               layer = \"nga_admbnda_adm2_osgof_20190417\") %>%\n                st_transform(crs = 26392)\n\nReading layer `nga_admbnda_adm2_osgof_20190417' from data source \n  `C:\\Jenpoer\\IS415-GAA\\In-Class-Exercises\\chapter-02\\data\\geospatial\\NGA' \n  using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84\n\n\n\n\n\n\nwp_nga <- read_csv(\"data/aspatial/WPDX.csv\") %>%\n  filter(`#clean_country_name` == \"Nigeria\")"
  },
  {
    "objectID": "In-Class-Exercises/chapter-02/ICE2.html#converting-aspatial-data-into-geospatial",
    "href": "In-Class-Exercises/chapter-02/ICE2.html#converting-aspatial-data-into-geospatial",
    "title": "In-Class Exercise 2: Thematic and Analytical Mapping",
    "section": "Converting Aspatial Data into Geospatial",
    "text": "Converting Aspatial Data into Geospatial\nConvert wkt field into sfc field (i.e. simple feature object) by using st_as_sfc() - to give structure.\n\nwp_nga$Geometry = st_as_sfc(wp_nga$`New Georeferenced Column`)\nglimpse(wp_nga)\n\nRows: 95,008\nColumns: 71\n$ row_id                        <dbl> 429068, 222071, 160612, 160669, 160642, …\n$ `#source`                     <chr> \"GRID3\", \"Federal Ministry of Water Reso…\n$ `#lat_deg`                    <dbl> 7.980000, 6.964532, 6.486940, 6.727570, …\n$ `#lon_deg`                    <dbl> 5.120000, 3.597668, 7.929720, 7.648670, …\n$ `#report_date`                <chr> \"08/29/2018 12:00:00 AM\", \"08/16/2015 12…\n$ `#status_id`                  <chr> \"Unknown\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"…\n$ `#water_source_clean`         <chr> NA, \"Borehole\", \"Borehole\", \"Borehole\", …\n$ `#water_source_category`      <chr> NA, \"Well\", \"Well\", \"Well\", \"Well\", \"Wel…\n$ `#water_tech_clean`           <chr> \"Tapstand\", \"Mechanized Pump\", \"Hand Pum…\n$ `#water_tech_category`        <chr> \"Tapstand\", \"Mechanized Pump\", \"Hand Pum…\n$ `#facility_type`              <chr> \"Improved\", \"Improved\", \"Improved\", \"Imp…\n$ `#clean_country_name`         <chr> \"Nigeria\", \"Nigeria\", \"Nigeria\", \"Nigeri…\n$ `#clean_adm1`                 <chr> \"Ekiti\", \"Ogun\", \"Ebonyi\", \"Enugu\", \"Enu…\n$ `#clean_adm2`                 <chr> \"Moba\", \"Obafemi-Owode\", \"Ohaukwu\", \"Isi…\n$ `#clean_adm3`                 <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `#clean_adm4`                 <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `#install_year`               <dbl> NA, NA, NA, NA, NA, NA, NA, 2016, 2016, …\n$ `#installer`                  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `#rehab_year`                 <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `#rehabilitator`              <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `#management_clean`           <chr> NA, \"Other\", NA, NA, NA, NA, NA, NA, NA,…\n$ `#status_clean`               <chr> NA, \"Functional\", NA, NA, NA, NA, NA, NA…\n$ `#pay`                        <chr> NA, \"No\", NA, NA, NA, NA, NA, NA, NA, NA…\n$ `#fecal_coliform_presence`    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `#fecal_coliform_value`       <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `#subjective_quality`         <chr> NA, \"Acceptable quality\", NA, NA, NA, NA…\n$ `#activity_id`                <chr> \"1a117ba2-5256-4801-874c-f7611a4499dd\", …\n$ `#scheme_id`                  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `#wpdx_id`                    <chr> \"6FV7X4JC+222\", \"6FR5XH7X+R37\", \"6FR9FWP…\n$ `#notes`                      <chr> \"Tap Water\", \"Ajura\", NA, NA, NA, NA, NA…\n$ `#orig_lnk`                   <chr> \"https://nigeria.africageoportal.com/dat…\n$ `#photo_lnk`                  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `#country_id`                 <chr> \"NG\", \"NG\", \"NG\", \"NG\", \"NG\", \"NG\", \"NG\"…\n$ `#data_lnk`                   <chr> \"https://catalog.waterpointdata.org/data…\n$ `#distance_to_primary_road`   <dbl> 767.3742, 13364.9005, 9492.7619, 9319.08…\n$ `#distance_to_secondary_road` <dbl> 921.79187, 48.87743, 4333.34280, 23276.3…\n$ `#distance_to_tertiary_road`  <dbl> 3146.733237, 4167.519068, 693.211204, 30…\n$ `#distance_to_city`           <dbl> 41049.944, 13898.649, 27381.922, 34823.6…\n$ `#distance_to_town`           <dbl> 959.365, 9405.783, 72060.118, 31665.447,…\n$ water_point_history           <chr> \"{\\\"2018-08-29\\\": {\\\"source\\\": \\\"GRID3\\\"…\n$ rehab_priority                <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ water_point_population        <dbl> NA, 140, 0, 492, 868, 81, 0, 9969, 933, …\n$ local_population_1km          <dbl> NA, 887, 0, 492, 1919, 81, 0, 13740, 933…\n$ crucialness_score             <dbl> NA, 0.1578354, NA, 1.0000000, 0.4523189,…\n$ pressure_score                <dbl> NA, 0.1400000, NA, 1.6400000, 2.8933333,…\n$ usage_capacity                <dbl> 250, 1000, 300, 300, 300, 300, 300, 1000…\n$ is_urban                      <lgl> TRUE, FALSE, FALSE, FALSE, FALSE, FALSE,…\n$ days_since_report             <dbl> 1483, 2592, 655, 655, 655, 655, 655, 217…\n$ staleness_score               <dbl> 62.65911, 44.17405, 81.34550, 81.34550, …\n$ latest_record                 <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…\n$ location_id                   <dbl> 358773, 264633, 397972, 397984, 397982, …\n$ cluster_size                  <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ `#clean_country_id`           <chr> \"NGA\", \"NGA\", \"NGA\", \"NGA\", \"NGA\", \"NGA\"…\n$ `#country_name`               <chr> \"Nigeria\", \"Nigeria\", \"Nigeria\", \"Nigeri…\n$ `#water_source`               <chr> \"Tap\", \"Improved Tube well or borehole\",…\n$ `#water_tech`                 <chr> NA, \"Motorised\", NA, NA, NA, NA, NA, \"Su…\n$ `#status`                     <chr> NA, \"Functional (and in use)\", NA, NA, N…\n$ `#adm2`                       <chr> NA, \"Obafemi-Owode\", NA, NA, NA, NA, NA,…\n$ `#adm3`                       <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `#management`                 <chr> NA, \"Other\", NA, NA, NA, NA, NA, NA, NA,…\n$ `#adm1`                       <chr> NA, \"Ogun\", \"Enugu\", \"Enugu\", \"Enugu\", \"…\n$ `New Georeferenced Column`    <chr> \"POINT (5.12 7.98)\", \"POINT (3.5976683 6…\n$ lat_deg_original              <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ lat_lon_deg                   <chr> \"(7.98°, 5.12°)\", \"(6.9645317°, 3.597668…\n$ lon_deg_original              <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ public_data_source            <chr> \"https://catalog.waterpointdata.org/data…\n$ converted                     <chr> NA, \"#status_id, #water_source, #pay, #s…\n$ count                         <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ created_timestamp             <chr> \"12/06/2021 09:12:57 PM\", \"06/30/2020 12…\n$ updated_timestamp             <chr> \"12/06/2021 09:12:57 PM\", \"06/30/2020 12…\n$ Geometry                      <POINT> POINT (5.12 7.98), POINT (3.597668 6.9…\n\n\nWe need to use 4326 because we want to put back the projection information first, as it is from aspatial data.\n\nwp_sf <- st_sf(wp_nga, crs=4326)\nwp_sf\n\nSimple feature collection with 95008 features and 70 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 2.707441 ymin: 4.301812 xmax: 14.21828 ymax: 13.86568\nGeodetic CRS:  WGS 84\n# A tibble: 95,008 × 71\n   row_id `#source`      #lat_…¹ #lon_…² #repo…³ #stat…⁴ #wate…⁵ #wate…⁶ #wate…⁷\n *  <dbl> <chr>            <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 429068 GRID3             7.98    5.12 08/29/… Unknown <NA>    <NA>    Tapsta…\n 2 222071 Federal Minis…    6.96    3.60 08/16/… Yes     Boreho… Well    Mechan…\n 3 160612 WaterAid          6.49    7.93 12/04/… Yes     Boreho… Well    Hand P…\n 4 160669 WaterAid          6.73    7.65 12/04/… Yes     Boreho… Well    <NA>   \n 5 160642 WaterAid          6.78    7.66 12/04/… Yes     Boreho… Well    Hand P…\n 6 160628 WaterAid          6.96    7.78 12/04/… Yes     Boreho… Well    Hand P…\n 7 160632 WaterAid          7.02    7.84 12/04/… Yes     Boreho… Well    Hand P…\n 8 642747 Living Water …    7.33    8.98 10/03/… Yes     Boreho… Well    Mechan…\n 9 642456 Living Water …    7.17    9.11 10/03/… Yes     Boreho… Well    Hand P…\n10 641347 Living Water …    7.20    9.22 03/28/… Yes     Boreho… Well    Hand P…\n# … with 94,998 more rows, 62 more variables: `#water_tech_category` <chr>,\n#   `#facility_type` <chr>, `#clean_country_name` <chr>, `#clean_adm1` <chr>,\n#   `#clean_adm2` <chr>, `#clean_adm3` <chr>, `#clean_adm4` <chr>,\n#   `#install_year` <dbl>, `#installer` <chr>, `#rehab_year` <lgl>,\n#   `#rehabilitator` <lgl>, `#management_clean` <chr>, `#status_clean` <chr>,\n#   `#pay` <chr>, `#fecal_coliform_presence` <chr>,\n#   `#fecal_coliform_value` <dbl>, `#subjective_quality` <chr>, …"
  },
  {
    "objectID": "In-Class-Exercises/chapter-02/ICE2.html#projection-transformation",
    "href": "In-Class-Exercises/chapter-02/ICE2.html#projection-transformation",
    "title": "In-Class Exercise 2: Thematic and Analytical Mapping",
    "section": "Projection transformation",
    "text": "Projection transformation\nTransform from WGS84 to Nigeria’s projected coordinate system.\n\nwp_sf <- wp_sf %>%\n  st_transform(crs = 26392)"
  },
  {
    "objectID": "In-Class-Exercises/chapter-02/ICE2.html#geospatial-data-cleaning",
    "href": "In-Class-Exercises/chapter-02/ICE2.html#geospatial-data-cleaning",
    "title": "In-Class Exercise 2: Thematic and Analytical Mapping",
    "section": "Geospatial Data Cleaning",
    "text": "Geospatial Data Cleaning\n\nSelect necessary columns only\n\nnga <- nga %>% select(c(3:4, 8:9))\n\n\n\nCheck for duplicate names\n\nduplicated_LGA <- nga$ADM2_EN[duplicated(nga$ADM2_EN)==TRUE]\nduplicated_LGA\n\n[1] \"Bassa\"    \"Ifelodun\" \"Irepodun\" \"Nasarawa\" \"Obi\"      \"Surulere\"\n\n\nThere are 6 LGAs with the same name, but in different states.\nSo, we plan to concatenate the state name to the duplicated names. First, we try to get the indices.\n\nduplicated_indices <- which(nga$ADM2_EN %in% duplicated_LGA)\nduplicated_indices\n\n [1]  94  95 304 305 355 356 519 520 546 547 693 694\n\n\nThen, we concatenate the state name to the duplicated names.\n\nfor (ind in duplicated_indices) {\n  nga$ADM2_EN[ind] <- paste(nga$ADM2_EN[ind], nga$ADM1_EN[ind], sep=\", \")\n}\n\nReplace unknown values and rename columns\n\nwp_sf <- wp_sf %>%\n  rename(status_clean = '#status_clean') %>%\n  select(status_clean) %>%\n  mutate(status_clean = replace_na(\n    status_clean, \"unknown\"\n  ))"
  },
  {
    "objectID": "In-Class-Exercises/chapter-02/ICE2.html#calculate-proportion-of-functional-and-non-functional-water-points-at-lga-level",
    "href": "In-Class-Exercises/chapter-02/ICE2.html#calculate-proportion-of-functional-and-non-functional-water-points-at-lga-level",
    "title": "In-Class Exercise 2: Thematic and Analytical Mapping",
    "section": "Calculate proportion of Functional and Non-Functional Water Points at LGA Level",
    "text": "Calculate proportion of Functional and Non-Functional Water Points at LGA Level\nCheck the column that contains if water point is functional or not. By using unique(), we can extract the unique values of each column.\n\nunique(wp_sf$`status_clean`)\n\n[1] \"unknown\"                          \"Functional\"                      \n[3] \"Abandoned/Decommissioned\"         \"Non-Functional\"                  \n[5] \"Functional but not in use\"        \"Functional but needs repair\"     \n[7] \"Abandoned\"                        \"Non functional due to dry season\"\n[9] \"Non-Functional due to dry season\"\n\n\nGet the number of functional water points per LGA\n\nfunctional <- wp_sf %>% filter(`status_clean` %in% \n                                 c(\"Functional\", \n                                   \"Functional but not in use\",\n                                   \"Functional but needs repair\")) \nWP_Functional <- lengths(st_intersects(nga, functional))\n\nGet the number of non-functional water points per LGA\n\nnon_functional <- wp_sf %>% filter(`status_clean` %in% \n                                     c(\"Abandoned/Decommissioned\",\n                                       \"Non-Functional due to dry season\",\n                                       \"Non-Functional\",\n                                       \"Abandoned\",\n                                       \"Non functional due to dry season\"))\nWP_Non_Functional <- lengths(st_intersects(nga, non_functional))\n\nGet the unknown water points\n\nunknown <- wp_sf %>% filter(`status_clean` %in% \n                                     c(\"unknown\"))\nWP_Unknown <- lengths(st_intersects(nga, unknown))\n\nGet the total number of water points per LGA\n\nWP_Total <- lengths(st_intersects(nga, wp_sf))\n\n\nCombining aspatial and spatial data into simple feature tibble\nCreate a copy of the nga data frame with WP_Functional, WP_Non_Functional, WP_Unknown, and WP_Total\n\nnga_combined <- nga %>%\n  mutate(WP_Functional) %>%\n  mutate(WP_Non_Functional) %>%\n  mutate(WP_Unknown) %>%\n  mutate(WP_Total)\n\nSave as RDS\n\nsaveRDS(nga_combined, file = \"data/rds/NGA_wp.rds\")\n\nCreate columns:\n\nWP_Functional_Proportion: Proportion of functional water points (number of functional water points / total number of water points)\nWP_Non_Functional_Proportion: Proportion of non-functional water points (number of non-functional water points / total number of water points)\n\n\nnga_combined <- nga_combined %>%\n  mutate(`WP_Functional_Proportion` = `WP_Functional`/`WP_Total`,\n         `WP_Non_Functional_Proportion` = `WP_Non_Functional`/`WP_Total`)\n\nReplace NaN values (caused by 0 / 0) in the new columns with 0\n\nnga_combined$`WP_Functional_Proportion`[is.na(nga_combined$`WP_Functional_Proportion`)] = 0\n\nnga_combined$`WP_Non_Functional_Proportion`[is.na(nga_combined$`WP_Non_Functional_Proportion`)] = 0\n\nDisplay the first 5 rows of the new tibble\n\nhead(nga_combined, n=5)\n\nSimple feature collection with 5 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 481088 ymin: 98142.39 xmax: 1248985 ymax: 1079710\nProjected CRS: Minna / Nigeria Mid Belt\n    ADM2_EN ADM2_PCODE                   ADM1_EN ADM1_PCODE\n1 Aba North   NG001001                      Abia      NG001\n2 Aba South   NG001002                      Abia      NG001\n3    Abadam   NG008001                     Borno      NG008\n4     Abaji   NG015001 Federal Capital Territory      NG015\n5      Abak   NG003001                 Akwa Ibom      NG003\n                        geometry WP_Functional WP_Non_Functional WP_Unknown\n1 MULTIPOLYGON (((548795.5 11...             7                 9          1\n2 MULTIPOLYGON (((547286.1 11...            29                35          7\n3 MULTIPOLYGON (((1248985 104...             0                 0          0\n4 MULTIPOLYGON (((510864.9 57...            23                34          0\n5 MULTIPOLYGON (((594269 1209...            23                25          0\n  WP_Total WP_Functional_Proportion WP_Non_Functional_Proportion\n1       17                0.4117647                    0.5294118\n2       71                0.4084507                    0.4929577\n3        0                0.0000000                    0.0000000\n4       57                0.4035088                    0.5964912\n5       48                0.4791667                    0.5208333"
  },
  {
    "objectID": "In-Class-Exercises/chapter-02/ICE2.html#visualise-distribution-of-water-points-with-analytical-plot",
    "href": "In-Class-Exercises/chapter-02/ICE2.html#visualise-distribution-of-water-points-with-analytical-plot",
    "title": "In-Class Exercise 2: Thematic and Analytical Mapping",
    "section": "Visualise distribution of water points with analytical plot",
    "text": "Visualise distribution of water points with analytical plot\nPlot the frequency table by status_clean\n\nfreq(wp_sf, input = \"status_clean\")\n\n\n\n\n                      status_clean frequency percentage cumulative_perc\n1                       Functional     45883      48.29           48.29\n2                   Non-Functional     29385      30.93           79.22\n3                          unknown     10656      11.22           90.44\n4      Functional but needs repair      4579       4.82           95.26\n5 Non-Functional due to dry season      2403       2.53           97.79\n6        Functional but not in use      1686       1.77           99.56\n7         Abandoned/Decommissioned       234       0.25           99.81\n8                        Abandoned       175       0.18           99.99\n9 Non functional due to dry season         7       0.01          100.00\n\n\nPlot distribution of water points by LGA\n\nggplot(data=nga_combined, \n       aes(x=`WP_Total`))+\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  geom_vline(aes(xintercept=mean(`WP_Total`, na.rm=T)),\n                 color=\"red\",\n                 linetype=\"dashed\",\n                 linewidth=0.8) +\n  ggtitle(\"Distribution of total water points by LGA\") +\n  xlab(\"No. of water points\") +\n  ylab(\"No. of\\nLGAs\") +\n  theme(axis.title.y=element_text(angle = 0))\n\n\n\n\nFrom the histogram, we can see that most LGAs have around 100-200 water points.\nScatter plot between proportion of functional water points vs. number of total water points\n\nggplot(data=nga_combined, \n       aes(y = `WP_Total`, \n           x= as.numeric(`WP_Functional_Proportion`)))+\n  geom_point(color=\"violet\") +\n  labs(x = \"Proportion Functional\",\n       y = \"Total Water Points\")"
  },
  {
    "objectID": "In-Class-Exercises/chapter-03/ICE3.html",
    "href": "In-Class-Exercises/chapter-03/ICE3.html",
    "title": "In-Class Exercise 3: Thematic and Analytical Mapping",
    "section": "",
    "text": "pacman::p_load(sf, tidyverse, tmap)"
  },
  {
    "objectID": "In-Class-Exercises/chapter-03/ICE3.html#small-multiples",
    "href": "In-Class-Exercises/chapter-03/ICE3.html#small-multiples",
    "title": "In-Class Exercise 3: Thematic and Analytical Mapping",
    "section": "Small multiples",
    "text": "Small multiples\n\ntmap_arrange(p2, p1, nrow=1)"
  },
  {
    "objectID": "In-Class-Exercises/chapter-03/ICE3.html#plotting-map-of-rate",
    "href": "In-Class-Exercises/chapter-03/ICE3.html#plotting-map-of-rate",
    "title": "In-Class Exercise 3: Thematic and Analytical Mapping",
    "section": "Plotting map of rate",
    "text": "Plotting map of rate\n\np3 <- tm_shape(NGA_wp) +\n  tm_fill(\"WP_Functional_Proportion\",\n          n = 10, # 10 classes\n          title = \"Functional WP Proportion\",\n          style = \"equal\",\n          palette = \"Blues\") +\n  tm_borders(lwd = 0.1,\n             alpha = 1) +\n  tm_layout(main.title = \"Rate Map of Functional Water Points\",\n            legend.outside = TRUE)\np3"
  },
  {
    "objectID": "In-Class-Exercises/chapter-03/ICE3.html#data-preparations",
    "href": "In-Class-Exercises/chapter-03/ICE3.html#data-preparations",
    "title": "In-Class Exercise 3: Thematic and Analytical Mapping",
    "section": "Data Preparations",
    "text": "Data Preparations\nDrop NA values\n\nNGA_wp <- NGA_wp %>% drop_na()\n\nCreate customised classification and extract values\n\npercent <- c(0, .01, .1, .5, .9, .99)\nvar <- NGA_wp[\"WP_Functional_Proportion\"] %>%\n  st_set_geometry(NULL) # need to drop the geometric field\nquantile(var[,1], percent)\n\n       0%        1%       10%       50%       90%       99% \n0.0000000 0.0000000 0.2169811 0.4791667 0.8611111 1.0000000"
  },
  {
    "objectID": "In-Class-Exercises/chapter-03/ICE3.html#utility-functions",
    "href": "In-Class-Exercises/chapter-03/ICE3.html#utility-functions",
    "title": "In-Class Exercise 3: Thematic and Analytical Mapping",
    "section": "Utility Functions",
    "text": "Utility Functions\nCreate get.var function to generalise the customised classification steps\n\nArguments:\n\nvname: variable name that you want to plot (as character, in quotes)\ndf: name of sf data frame\n\nReturns:\n\nv: vector with values (without a column name)\n\n\n\nget.var <- function(vname, df) {\n  v <- df[vname] %>%\n    st_set_geometry(NULL)\n  v <- unname(v[,1])\n  return(v)\n}\n\nCreate percentmap function to plot the percentile map\n\npercentmap <- function(vname, df, legtitle=NA, mtitle=\"Percentile Map\") {\n  percent <- c(0, .01, .1, .5, .9, .99)\n  var <- get.var(vname, df)\n  bperc <- quantile(var, percent)\n  tm_shape(df) +\n    tm_polygons() +\n    tm_shape(df) +\n    tm_fill(vname,\n            title=legtitle,\n            breaks=bperc,\n            palette=\"Blues\",\n            labels=c(\"< 1%\", \"1-10%\", \"10-50%\", \"50-90%\", \"90-99%\", \"> 99%\")) +\n    tm_borders() +\n    tm_layout(main.title = mtitle,\n              legend.outside = TRUE,\n              legend.position = c(\"right\", \"bottom\"),\n              title.position = c(\"right\", \"bottom\"))\n  \n}"
  },
  {
    "objectID": "In-Class-Exercises/chapter-03/ICE3.html#plot",
    "href": "In-Class-Exercises/chapter-03/ICE3.html#plot",
    "title": "In-Class Exercise 3: Thematic and Analytical Mapping",
    "section": "Plot",
    "text": "Plot\n\npercentmap(\"WP_Functional_Proportion\", NGA_wp, legtitle = \"Functional Proportion\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "Jennifer Poernomo’s compilation of In Class Exercises, Hands On Exercises, and Take Home Exercises for 2023 T1 IS415 Geospatial Analytics and Applications."
  }
]