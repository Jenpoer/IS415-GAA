---
title: "Hands-On Exercise 2: Geospatial Data Wrangling"
format: html
execute: 
  message: false
  warning: false
editor: visual
---

# Import Packages

```{r}
pacman::p_load(sf, tidyverse)
```

# Spatial Data

## Importing the Datasets

Master Plan 2014 Subzone Boundaries (Web) from data.gov.sg . Web version is used because it's optimized for web display, with a smaller file size.

```{r}
mpsz = st_read(dsn = "data/geospatial/master-plan-2014-subzone-boundary-web-shp", 
               layer = "MP14_SUBZONE_WEB_PL")
```

Cycling Path from LTADataMall

```{r}
cyclingpath = st_read(dsn = "data/geospatial/CyclingPathGazette", 
                      layer = "CyclingPathGazette")
```

Pre-Schools Location from [Dataportal.asia](https://dataportal.asia/dataset/203030733_pre-schools-location) (originally from data.gov.sg)

```{r}
preschool = st_read("data/geospatial/preschools-location.kml")
```

## Checking the contents of a simple feature data frame

Checking the information about the geometry, such as type, geographic extent of features, and coordinate system of the data.

```{r}
st_geometry(mpsz)
```

Find out about the attribute information in the data frame.

```{r}
glimpse(mpsz)
```

Reveal complete information of a feature object, but retrieve the first few rows only.

```{r}
head(mpsz, n=5)
```

## Plotting the Geospatial Data

Plot all the features of the data frame in small multiples. max.plot is used to show all the features, since it limits to the first 9 by default.

```{r}
plot(mpsz, max.plot=15)
```

Plot only the geometry

```{r}
plot(st_geometry(mpsz))
```

Plot the sf object using a specific attribute

```{r}
plot(mpsz["PLN_AREA_N"])
```

## Projection Transformation

Project a feature to another coordinate system.

```{r}
st_crs(mpsz)
```

Even though the projection system is SVY21, when we read the end of print, the EPSG is 9001. This is wrong because EPSG of SVY21 should be [3414](https://epsg.io/3414).

SVY21 is coordinate system for Singapore.

```{r}
mpsz3414 <- st_set_crs(mpsz, 3414)
```

However, different case for Preschool. We cannot just replace the EPSG.

```{r}
st_geometry(preschool)
```

It uses WGS84, which we need to actually project mathematically to SVY21.

```{r}
preschool3414 <- st_transform(preschool, 
                              crs = 3414)
```

# Aspatial Data

## Import data

```{r}
listings <- read_csv('data/aspatial/listings.csv')
list(listings)
```

Listings is a tibble

```{r}
is_tibble(listings)
```

Create a simple feature data frame from aspatial data

```{r}
listings_sf <- st_as_sf(listings, 
                        coords = c("longitude", "latitude"), 
                        crs=4326) %>%
  st_transform(crs = 3414)
```

::: callout-note
## %\>% is like a pipe, defined by package magrittr, used to pass the left hand side of the operator to the first argument of the right hand side of the operator
:::

```{r}
glimpse(listings_sf)
```

# Geoprocessing

## Buffering

Buffering is reclassification based on distance: classification of within/without a given proximity.

```{r}
buffer_cycling <- st_buffer(cyclingpath, 
                            dist=5, nQuadSegs = 30) # 5 meter buffers along cycling paths
```

Calculate area of buffers

```{r}
buffer_cycling$AREA <- st_area(buffer_cycling)
```

Show sum of total land involved

```{r}
sum(buffer_cycling$AREA)
```

## Point-in-polygon Count

Goal: Identify pre-schools located in each Planning Subzone using st_intersects.

length is used to calculate number of pre-schools that fall inside each zone.

```{r}
mpsz3414$`PreSch Count`<- lengths(st_intersects(mpsz3414, listings_sf))
```

```{r}
summary(mpsz3414$`PreSch Count`)
```

List the subzone with the most number of preschools

```{r}
top_n(mpsz3414, 1, `PreSch Count`)
```

Display count of preschools in subzone number

```{r}
aggregate(`PreSch Count` ~ SUBZONE_NO, mpsz3414, FUN=sum)
```

Count density by planning subzone

```{r}
mpsz3414$Area <- mpsz3414 %>%
  st_area()
mpsz3414 <- mpsz3414 %>%
  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)
head(mpsz3414)
```

# Exploratory Data Analysis (EDA)

Basic plot

```{r}
hist(mpsz3414$`PreSch Density`)
```

Fancier plot using ggplot2

```{r}
ggplot(data=mpsz3414, 
       aes(x= as.numeric(`PreSch Density`)))+
  geom_histogram(bins=20, 
                 color="black", 
                 fill="light blue") +
  labs(title = "Are pre-school even distributed in Singapore?",
       subtitle= "There are many planning sub-zones with a single pre-school, on the other hand, \nthere are two planning sub-zones with at least 20 pre-schools",
       x = "Pre-school density (per km sq)",
       y = "Frequency")
```

Scatter plot between preschool density and preschool count

```{r}
ggplot(data=mpsz3414, 
       aes(y = `PreSch Count`, 
           x= as.numeric(`PreSch Density`)))+
  geom_point(color="black", 
             fill="light blue") +
  xlim(0, 40) +
  ylim(0, 40) +
  labs(title = "",
       x = "Pre-school density (per km sq)",
       y = "Pre-school count")
```
